import plugin.vesions.*

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
apply from: '../android_common.gradle'
android {

    defaultConfig {
        applicationId "com.github.zchu.archapp"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'LEANCLOUD_SERVER_URL', '"https://fn78orw2.api.lncld.net/1.1/"'
        buildConfigField 'String', 'LEANCLOUD_APP_ID', '"fn78orw2hVO4V4d5n8VBypj7-gzGzoHsz"'
        buildConfigField 'String', 'LEANCLOUD_APP_KEY', '"eGNJCnxUVelIBTo14A1SQkdr"'

        buildConfigField 'String', 'UM_CHANNEL', '"default"'


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //为了解决部分第三方库重复打包了META-INF的问题
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/common_release.kotlin_module'
        exclude 'META-INF/module_debug.kotlin_module'
        exclude 'META-INF/module_no_op_debug.kotlin_module'
        exclude 'META-INF/module_service_debug.kotlin_module'
    }

    flavorDimensions 'default'
    productFlavors {

        production {
            dimension "default"
        }

        development {
            dimension "default"
        }




    }
}

dependencies {

    implementation project(Modules.commonBase)
    implementation project(Modules.common)
    implementation project(Modules.userSession)
    implementation project(Modules.moduleService)
    implementation project(Modules.Resources.languages)
    implementation project(Modules.Resources.styles)
    implementation project(Modules.Data.model)


    developmentImplementation project(Modules.Login.moduleNoOp)
    productionImplementation project(Modules.Login.module)
    implementation project(Modules.Login.moduleService)

    developmentImplementation project(Modules.User.moduleNoOp)
    productionImplementation project(Modules.User.module)
    implementation project(Modules.User.moduleService)

    implementation Depends.AndroidX.coreKtx
    implementation Depends.AndroidX.appcompat
    implementation Depends.AndroidX.cardview
    implementation Depends.AndroidX.recyclerview
    implementation Depends.AndroidX.material
    implementation Depends.AndroidX.constraintlayout
    implementation Depends.Rx.rxpermissions

    //navigation
    implementation Depends.AndroidX.navigationFragment
    implementation Depends.AndroidX.navigationFragmentKtx
    implementation Depends.AndroidX.navigationUI
    implementation Depends.AndroidX.navigationUIKtx
    implementation Depends.AndroidX.navigationRuntime

    implementation Depends.AndroidX.livedataKtx
    implementation Depends.AndroidX.viewmodelKtx
    testImplementation Depends.junit
    androidTestImplementation Depends.androidTestJunit
    androidTestImplementation Depends.espressoCore

    // auto-service
    implementation Depends.autoService
    annotationProcessor Depends.autoServiceApt
    kapt Depends.autoServiceApt


}